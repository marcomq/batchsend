# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:  
  push:
    paths:
      - 'setup.py'
    branches:
      - main

jobs:
 # ----------------------------------------------------------------------------
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.x', '3.6', '3.8' ]
    steps:
      - uses: actions/checkout@v2

      - uses: jiro4989/setup-nim-action@v1
        with:
          nim-version: '1.6.x'
      
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel twine nimporter

      - name: Build binary and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py bdist_wheel
          WHEEL=dist/$(python3 -c 'import pathlib;print([*pathlib.Path("dist").glob("batchsend*")][0].name.replace("linux", "manylinux1"))')
          mv dist/$(python -c "import pathlib;print([*pathlib.Path('dist').glob('batchsend*')][0].name)") $WHEEL
          ls dist
          twine upload --skip-existing dist/*

  # ----------------------------------------------------------------------------
  build-win32:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [ '3.x', '3.7', '3.8', '3.9' ]
    steps:
      - uses: actions/checkout@v2
        
      - uses: jiro4989/setup-nim-action@v1
        with:
          nim-version: '1.6.x'

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel twine nimporter

      - name: Build source, binary and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py bdist_wheel
          python setup.py sdist
          twine upload --skip-existing dist/*

  # ----------------------------------------------------------------------------
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'

      - uses: jiro4989/setup-nim-action@v1
        with:
          nim-version: '1.6.x'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install setuptools wheel twine nimporter

      - name: Build binary and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python3 setup.py bdist_wheel
          twine upload dist/*
          
#      - name: Publish package
#        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
#        with:
#          user: __token__
#          password: ${{ secrets.PYPI_API_TOKEN }}
